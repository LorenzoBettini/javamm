<?xml version="1.0" encoding="UTF-8"?>
<project>
	<modelVersion>4.0.0</modelVersion>

	<parent>
		<relativePath>../javamm.releng/pom.xml</relativePath>
		<groupId>javamm</groupId>
		<artifactId>javamm.releng</artifactId>
		<version>1.1.0-SNAPSHOT</version>
	</parent>

	<artifactId>javamm</artifactId>
	<packaging>eclipse-plugin</packaging>

	<build>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-clean-plugin</artifactId>
				<version>2.5</version>
				<configuration>
					<skip>${mwe2.skip}</skip>
					<filesets>
						<fileset>
							<directory>${basedir}/src-gen</directory>
						</fileset>
						<fileset>
							<directory>${basedir}/xtend-gen</directory>
						</fileset>
						<!-- clean ui plugin as well -->
						<fileset>
							<directory>${basedir}/../${project.artifactId}.ui/src-gen</directory>
						</fileset>
						<fileset>
							<directory>${basedir}/../${project.artifactId}.ui/xtend-gen</directory>
						</fileset>
						<!-- clean test fragment as well -->
						<fileset>
							<directory>${basedir}/../${project.artifactId}.tests/src-gen</directory>
						</fileset>
						<fileset>
							<directory>${basedir}/../${project.artifactId}.tests/xtend-gen</directory>
						</fileset>
						<!-- clean swtbot.test and ide target as well, to avoid warnings, since
						that contain installed artifacts -->
						<fileset>
							<directory>${basedir}/../${project.artifactId}.swtbot.tests/target</directory>
						</fileset>
						<fileset>
							<directory>${basedir}/../${project.artifactId}.ide.site/target</directory>
						</fileset>
					</filesets>
				</configuration>
			</plugin>

			<!-- With this copy, there's no need to specify additional dependencies in the exec-maven-plugin
				and we will use the bundles from p2, not the maven artifacts
				see https://github.com/cdietrich/xtext-maven-example/blob/master/org.xtext.example.mydsl/pom.xml -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-dependency-plugin</artifactId>
				<executions>
					<execution>
						<id>copy-dependencies</id>
						<phase>generate-sources</phase>
						<goals>
							<goal>copy-dependencies</goal>
						</goals>
						<configuration>
							<outputDirectory>${project.build.directory}/osgilib/</outputDirectory>
							<excludeTransitive>true</excludeTransitive>
							<addParentPoms>false</addParentPoms>
							<excludeScope>provided</excludeScope>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>exec-maven-plugin</artifactId>
				<version>1.4.0</version>
				<executions>
					<execution>
						<id>mwe2Launcher</id>
						<phase>generate-sources</phase>
						<goals>
							<goal>exec</goal>
						</goals>
						<configuration>
							<executable>java</executable>
							<killAfter>-1</killAfter>
							<!-- We don't clean up the deamon Threads -> mwe launcher does not exit 
								nicely when asked for interruption and the build hangs unnessesarily for 
								15sec -->
							<cleanupDaemonThreads>false</cleanupDaemonThreads>
							<skip>${mwe2.skip}</skip>
							<includeProjectDependencies>true</includeProjectDependencies>
							<includePluginDependencies>true</includePluginDependencies>
							<arguments>
								<argument>-classpath</argument>
								<argument>${project.build.directory}/osgilib/*</argument>
								<argument>org.eclipse.emf.mwe2.launch.runtime.Mwe2Launcher</argument>
								<argument>file://${project.basedir}/src/javamm/GenerateJavamm.mwe2</argument>
								<argument>
									-p
								</argument>
								<argument>
									runtimeProject=/${project.basedir}
								</argument>
							</arguments>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>org.eclipse.xtend</groupId>
				<artifactId>xtend-maven-plugin</artifactId>
			</plugin>

			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>findbugs-maven-plugin</artifactId>
			</plugin>
		</plugins>
	</build>

	<dependencies>
		<dependency>
			<groupId>javamm</groupId>
			<artifactId>javamm.mwe2</artifactId>
			<version>${project.version}</version>
		</dependency>
	</dependencies>
	
</project>
