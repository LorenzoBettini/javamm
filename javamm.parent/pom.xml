<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>javamm</groupId>
  <artifactId>javamm.parent</artifactId>
  <version>1.13.1-SNAPSHOT</version>
  <packaging>pom</packaging>
    <!-- IMPORTANT: the parent's version (unrelated to this artifact's version) 
    must come after this artifact's version to make the increment_version.ant behave 
    correctly. -->
  <parent>
    <groupId>io.github.lorenzobettini.xtextutils</groupId>
    <artifactId>xtext-tycho-parent</artifactId>
    <version>0.6.5</version>
    <relativePath></relativePath>
  </parent>

  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <xtext-version>${xtextVersion}</xtext-version>
    <eclipse-version>2021-12</eclipse-version>
    <jbase-major-version>0</jbase-major-version>
    <jbase-minor-version>12</jbase-minor-version>
    <jbase-version>${jbase-major-version}.${jbase-minor-version}.2</jbase-version>

    <target-file-name>javamm.target</target-file-name>

    <!-- Sonarqube -->
    <jacoco-aggregate-report>javamm.tests.report/target/site/jacoco-aggregate/jacoco.xml</jacoco-aggregate-report>

    <sonar.coverage.jacoco.xmlReportPaths>
      ../${jacoco-aggregate-report}
    </sonar.coverage.jacoco.xmlReportPaths>

    <!-- Exclude Xtend generated files from code coverage:
      we cover the original Xtend files, using xtendAsPrimaryDebugSource.
      -->
    <sonar.coverage.exclusions>
      **/Input.java,
      **/xtend-gen/**/*.java,
    </sonar.coverage.exclusions>

    <sonar.exclusions>
      **/ui/launch/*.java,
      **/*SelfAssessmentNature.java,
      **/*JvmModelGenerator.java,
      **/New*FileWizard*.java,
      **/New*Initial*.java,
      **/*ProjectFiles.java,
      **/src-gen/**,
      **/emf-gen/**,
      **/impl/*ImplCustom.java,
      **/*RuntimeModule.java,
      **/*UiModule.java,
      **/*XcoreReader.java,
      **/*UiExamples.java,
      **/*TypeSystemGen*.java,
      **/*StandaloneSetup*.java,
      **/*Activator.java,
      **/ide/**,
    </sonar.exclusions>

    <!-- To make SonarQube detect JUnit tests in generated Java code from Xtend -->
    <sonar.scm.exclusions.disabled>true</sonar.scm.exclusions.disabled>

    <!-- see http://sonarqube.15.x6.nabble.com/sonar-issue-ignore-multicriteria-td5021722.html 
      and http://stackoverflow.com/questions/21825469/configure-sonar-sonar-issue-ignore-multicriteria-through-maven 
      for the multicriteria property -->
    <sonar.issue.ignore.multicriteria>e11,e12,e13,e14,e2,e3,e4,e5,e6,e7,e8</sonar.issue.ignore.multicriteria>

    <!-- standard convention for method names: in the outline tree provider 
      we must use methods that start with _ and they'd violate the rule squid:S00100 -->
    <sonar.issue.ignore.multicriteria.e11.ruleKey>java:S100</sonar.issue.ignore.multicriteria.e11.ruleKey>
    <sonar.issue.ignore.multicriteria.e11.resourceKey>**/*OutlineTreeProvider.java</sonar.issue.ignore.multicriteria.e11.resourceKey>

    <sonar.issue.ignore.multicriteria.e12.ruleKey>java:S100</sonar.issue.ignore.multicriteria.e12.ruleKey>
    <sonar.issue.ignore.multicriteria.e12.resourceKey>**/*AbstractXbaseProposalProvider.java</sonar.issue.ignore.multicriteria.e12.resourceKey>

    <sonar.issue.ignore.multicriteria.e13.ruleKey>java:S100</sonar.issue.ignore.multicriteria.e13.ruleKey>
    <sonar.issue.ignore.multicriteria.e13.resourceKey>**/*XbaseCompiler.java</sonar.issue.ignore.multicriteria.e13.resourceKey>

    <sonar.issue.ignore.multicriteria.e14.ruleKey>java:S100</sonar.issue.ignore.multicriteria.e14.ruleKey>
    <sonar.issue.ignore.multicriteria.e14.resourceKey>**/*ValueConverterService.java</sonar.issue.ignore.multicriteria.e14.resourceKey>

    <!-- "Tabulation characters should not be used" sorry... I don't agree 
      :) -->
    <sonar.issue.ignore.multicriteria.e2.ruleKey>squid:S00105</sonar.issue.ignore.multicriteria.e2.ruleKey>
    <sonar.issue.ignore.multicriteria.e2.resourceKey>**/*.java</sonar.issue.ignore.multicriteria.e2.resourceKey>

    <!-- Unused parameters are needed in these files for polymorphic dispatching -->
    <sonar.issue.ignore.multicriteria.e3.ruleKey>java:S1172</sonar.issue.ignore.multicriteria.e3.ruleKey>
    <sonar.issue.ignore.multicriteria.e3.resourceKey>**/*XbaseCompiler.java</sonar.issue.ignore.multicriteria.e3.resourceKey>

    <!-- Unused parameters are needed in these files for polymorphic dispatching -->
    <sonar.issue.ignore.multicriteria.e4.ruleKey>java:S1172</sonar.issue.ignore.multicriteria.e4.ruleKey>
    <sonar.issue.ignore.multicriteria.e4.resourceKey>**/*AbstractXbaseProposalProvider.java</sonar.issue.ignore.multicriteria.e4.resourceKey>

    <!-- Useless parenthesis; these files use code automatically generated -->
    <sonar.issue.ignore.multicriteria.e5.ruleKey>squid:UselessParenthesesCheck</sonar.issue.ignore.multicriteria.e5.ruleKey>
    <sonar.issue.ignore.multicriteria.e5.resourceKey>**/*AbstractXbaseProposalProvider.java</sonar.issue.ignore.multicriteria.e5.resourceKey>

    <!-- Eclipse builder IProject[] build is expected to return null in some 
      cases -->
    <sonar.issue.ignore.multicriteria.e6.ruleKey>squid:S1168</sonar.issue.ignore.multicriteria.e6.ruleKey>
    <sonar.issue.ignore.multicriteria.e6.resourceKey>**/*SelfAssessmentBuilder.java</sonar.issue.ignore.multicriteria.e6.resourceKey>

    <!-- since we use frameworks it's normal to have a deep inheritance -->
    <sonar.issue.ignore.multicriteria.e7.ruleKey>squid:MaximumInheritanceDepth</sonar.issue.ignore.multicriteria.e7.ruleKey>
    <sonar.issue.ignore.multicriteria.e7.resourceKey>**/*.java</sonar.issue.ignore.multicriteria.e7.resourceKey>

    <!-- Disable rule for undocumented API (we have no API) -->
    <sonar.issue.ignore.multicriteria.e8.ruleKey>squid:UndocumentedApi</sonar.issue.ignore.multicriteria.e8.ruleKey>
    <sonar.issue.ignore.multicriteria.e8.resourceKey>**/*.java</sonar.issue.ignore.multicriteria.e8.resourceKey>

    <swtbot.tests.only>false</swtbot.tests.only>
    <swtbot.tests.skip>false</swtbot.tests.skip>

    <!-- since this could be used in the pluginManagement section, we need 
      to make sure the path always points to this pom's directory; project.basedir 
      will always point to the directory of the pom where the pluginManagement's 
      plugins are used -->
    <ant-files-path>${project.basedir}/../javamm.parent/ant</ant-files-path>

    <!-- set it to true to have a self contained p2 repository https://wiki.eclipse.org/Tycho/eclipse-repository#Creating_a_self-contained_p2_repository -->
    <!-- We handle that at .site and .ide.site level -->
    <!-- <includeAllDependencies>true</includeAllDependencies> -->

    <!-- pass "-n" to perform a trial run with no changes made -->
    <dryrun></dryrun>

    <!-- properties for deploying the composite update site
      on GitHub Pages -->
    <github-update-repo>git@github.com:LorenzoBettini/javamm-releases.git</github-update-repo>
    <github-local-clone>${project.build.directory}/checkout</github-local-clone>
    <releases-directory>${github-local-clone}/releases</releases-directory>
    <current-release-directory>${releases-directory}/${qualifiedVersion}</current-release-directory>
    <!-- The label for the Composite sites -->
    <site.label>Java-- Site</site.label>

    <!-- properties for deploying the composite update site and zipped products 
      on Sourceforge -->
    <remote.dir>lbettini@frs.sourceforge.net:/home/frs/project/javamm</remote.dir>
  </properties>

  <modules>
    <module>../javamm.targetplatform</module>
    <module>../javamm.runtime</module>
    <module>../javamm</module>
    <module>../javamm.selfassessment.builder</module>
    <module>../javamm.ide</module>
    <module>../javamm.ui</module>
    <module>../javamm.examples</module>
    <module>../javamm.ui.examples</module>
    <module>../javamm.tests</module>
    <module>../javamm.ui.tests</module>
    <module>../javamm.requirements.feature</module>
    <module>../javamm.sdk</module>
    <module>../javamm.eclipse.sdk</module>
    <module>../javamm.product.ui.feature</module>
    <module>../javamm.site</module>
    <module>../javamm.tests.report</module>
  </modules>

  <profiles>
    <profile>
      <id>ide-tests</id>
      <activation>
        <activeByDefault>false</activeByDefault>
      </activation>
      <modules>
        <module>../javamm.swtbot.tests</module>
      </modules>
    </profile>
    <profile>
      <id>release-composite</id> <!-- release composite update site on GitHub Pages -->
      <properties>
        <skipTests>true</skipTests>
      </properties>
      <build>
        <pluginManagement>
          <plugins>
            <plugin>
              <artifactId>maven-install-plugin</artifactId>
              <executions>
                <execution>
                  <id>default-install</id>
                  <phase>none</phase>
                </execution>
              </executions>
            </plugin>
            <plugin>
              <artifactId>maven-deploy-plugin</artifactId>
              <configuration>
                <skip>true</skip>
              </configuration>
            </plugin>
          </plugins>
        </pluginManagement>
      </build>
    </profile>
    <profile>
      <id>release-ide</id> <!-- release IDE products on Sourceforge -->
      <activation>
        <activeByDefault>false</activeByDefault>
      </activation>
      <properties>
        <skipTests>true</skipTests>
      </properties>
      <build>
        <pluginManagement>
          <plugins>
            <plugin>
              <artifactId>maven-install-plugin</artifactId>
              <executions>
                <execution>
                  <id>default-install</id>
                  <phase>none</phase>
                </execution>
              </executions>
            </plugin>
            <plugin>
              <artifactId>maven-deploy-plugin</artifactId>
              <configuration>
                <skip>true</skip>
              </configuration>
            </plugin>
          </plugins>
        </pluginManagement>
      </build>
    </profile>
    <profile>
      <!--
        This assumes that release-composite is enabled as well
      -->
      <id>release-snapshots</id>
      <activation>
        <activeByDefault>false</activeByDefault>
      </activation>
      <properties>
        <github-update-repo>git@github.com:LorenzoBettini/javamm-snapshots.git</github-update-repo>
        <site.label>Java-- Snapshot Site</site.label>
      </properties>
    </profile>
  </profiles>

  <build>
    <pluginManagement>
      <plugins>
        <plugin>
          <groupId>org.eclipse.tycho</groupId>
          <artifactId>tycho-packaging-plugin</artifactId>
          <version>${tycho-version}</version>
          <configuration>
            <format>'v'yyyyMMdd'-'HHmm</format>
          </configuration>
        </plugin>
        <plugin>
          <groupId>org.eluder.coveralls</groupId>
          <artifactId>coveralls-maven-plugin</artifactId>
          <version>4.3.0</version>
          <configuration>
            <jacocoReports>
              <!-- by default Jacoco generates its report here -->
              <jacocoReport>${sonar.coverage.jacoco.xmlReportPaths}</jacocoReport>
            </jacocoReports>
          </configuration>
          <dependencies>
            <!-- This is required when using JDK 9 or higher since javax.xml.bind has 
              been removed from the JDK -->
            <dependency>
              <groupId>javax.xml.bind</groupId>
              <artifactId>jaxb-api</artifactId>
              <version>2.3.1</version>
            </dependency>
          </dependencies>
        </plugin>
        <plugin>
          <groupId>org.sonarsource.scanner.maven</groupId>
          <artifactId>sonar-maven-plugin</artifactId>
          <version>3.9.0.2155</version>
        </plugin>
      </plugins>
    </pluginManagement>
    <plugins>
      <plugin>
        <groupId>org.eclipse.tycho</groupId>
        <artifactId>target-platform-configuration</artifactId>
        <configuration>
          <target>
            <artifact>
              <groupId>javamm</groupId>
              <artifactId>javamm.targetplatform</artifactId>
              <version>${project.version}</version>
              <classifier>${target-file-name}</classifier>
            </artifact>
          </target>
        </configuration>
      </plugin>
    </plugins>
  </build>

</project>
